db.cs336collection.insert([{id:1388534400000,author:'Pete Hunt',text: 'Hey there!'},{id: 1420070400000,author:'Paul O’Shannessy',text: 'React is *great*!'}])

Compare and contrast MongoDB and the SQL databases you’ve used before. Are there things that one can do that the other can’t?
	- MongoDB and SQL databases both run from teh command line. They also both have a server where the data is being stored, in the case of TransacSQL and PostgreSQL, you can run them with your local comptuer being the server, and use port forwarding to make your computer the central server for the datbase. With MongoDB, the server on the cloud and is controlled by MongoDB servers. You are given a part of the cloud (500 mb), to use as a expiremental DB for testing. However, with TSQL and PSQL, the database is only limited by your hardware specs on your desktop/laptop machine.  MongoDB also uses JSON heavily, it uses functions to modify data and JSON arguments into the functions.

You could run MongoDB locally. What advantages and/or disadvantages would that bring with respect to the cloud database you have now?
	- Running the MongoDB locally would let you use your own computer as the server which would mean you could use CPU and hardware to run the server as opposed to MongoDB's server with their resources. 
	- One advantage to use the cloud's DB is security, mongoDB most likely already has a encryption/authentication standard for their servers which would drastically reduce the likelihood of data breaches. If you use your own machine as a server, you have to build encryption/authentication systems if you want to secure your data. 

You’ve built a “sandbox” database on mLab. Could you use this for a production database? Why or why not?
	- No, it can not be used for a production database, this is due to many factors. The first is the size of your maximum allocated
	database (500 mb), this is way too small for any real production level data. Another factor is that your resources (RAM, CPU) on the sandbox database we created, would be limited. 

For this integration of mLab into your application, was it better to run the modified server (npm start) or the full Webpack development environment (npm run dev)? Why?
	- For the purposes of this lab, the Webpack Development Environment  is still better as it still transfers 9kb less data then the other one (tested). This change (integration of the database) may have not had a impact on times of the webpack server and moidified server. 


Explain what happens when you modify the database using mLab’s web interface rather than your application? Try adding/updating/deleting comment documents.
	- When you delete,update,add comments from mLab's web interface it doesn't delete them from the webpage, automatically, it takes a refresh from the end user to see the updated information. 


Is this comments application the sort of application that should use an SQL or a noSQL database? Explain your answer.
	- This should use noSQL. A Relational SQL Database system, is only good when you have relationships between objects
	and between tables. This kind of comments database, which simply uses a database to store comments, to later fetch
	and use to populate a list, would not need a relational database, you only need a database to store all comments.

